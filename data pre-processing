#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri May 14 13:40:03 2021

@author: qinnan
"""
import numpy as np
import os                #遍历文件夹
import nibabel as nib    #nii格式一般都会用到这个包
import imageio           #转换成图像
from matplotlib import pyplot as plt
import cv2
import SimpleITK as sitk #also for nii

#read nii
def showNii(img):
    for i in range(img.shape[0]):
        plt.imshow(img[:,i,:],cmap='gray')
        plt.show()
 
itk_img = sitk.ReadImage('/.nii')
img0 = sitk.GetArrayFromImage(itk_img)
print(img0.shape)    # (155, 240, 240) 表示各個維度的切片數量
showNii(img0)
    

#resize image to 256*256
def showNii(img):
    for i in range(70,90):
        plt.figure()
        plt.imshow(img[:,i,:],cmap='gray')
        image=img[:,i,:]
        img1 = cv2.rotate(image,cv2.ROTATE_180)
        ori_img1=np.zeros((256,256))  #padding
        ori_img1[:,53:203] = img1
        img2 = cv2.resize(ori_img1, (256, 256), interpolation=cv2.INTER_AREA)
        np.save("//%d.npy"%i,img2)
      
        plt.figure()
        plt.imshow(img2,cmap='gray')
        plt.show()
         
#transfer nii to png

def nii_to_image(niifile):
    filenames = os.listdir(filepath)  #读取nii文件夹
    slice_trans = []
 
    for f in filenames:
        #开始读取nii文件
        img_path = os.path.join(filepath, f)
        img = nib.load(img_path)                #读取nii
        img_fdata = img.get_fdata()
        fname = f.replace('.nii','')            #去掉nii的后缀名
        img_f_path = os.path.join(imgfile, fname)
        #创建nii对应的图像的文件夹
        if not os.path.exists(img_f_path):
            os.mkdir(img_f_path)                #新建文件夹
 
        #开始转换为图像
        (x,y,z) = img.shape
        for i in range(z):                      #z是图像的序列
            silce = img_fdata[i, :, :]          #选择哪个方向的切片都可以
            imageio.imwrite(os.path.join(img_f_path,'{}.png'.format(i)), silce)
                                                #保存图像
 
if __name__ == '__main__':
    filepath = '//'
    imgfile = '//'
    nii_to_image(filepath)
    
     
